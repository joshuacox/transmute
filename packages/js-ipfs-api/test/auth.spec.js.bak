/* eslint-env mocha */
'use strict';

const chai = require('chai');
const dirtyChai = require('dirty-chai');
const expect = chai.expect;
chai.use(dirtyChai);

const IPFSApi = require('../src');
const f = require('./utils/factory');

const ACCESS_TOKEN = process.env.ACCESS_TOKEN;

describe('authorization header', function() {
  this.timeout(50 * 1000); // slow CI

  let ipfs;
  let ipfsd;

  before(done => {
    f.spawn({ initOptions: { bits: 1024 } }, (err, _ipfsd) => {
      expect(err).to.not.exist();
      ipfsd = _ipfsd;
      ipfs = IPFSApi({
        host: 'localhost',
        port: 5001,
        protocol: 'http',
        authorization: 'Bearer ' + ACCESS_TOKEN
      });
      done();
    });
  });

  after(done => ipfsd.stop(done));

  it('authorization header from config', done => {
    ipfs.id((err, res) => {
    //   console.log(res);
      done();
    });
  });
});
