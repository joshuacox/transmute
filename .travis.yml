matrix:
  include:
    - os: linux
      dist: trusty
      sudo: required
      env:
        - CHANGE_MINIKUBE_NONE_USER=true
        - MINIKUBE_VERSION=v0.25.2
        - USE_VOX=n
      language: bash
      cache:
        directories:
        - $HOME/.minikube
        - $HOME/.transmute
        - $HOME/.kube
        - /usr/local/bin
    #- os: osx
      #osx_image: xcode8.3
      #language: bash
      #cache:
        #directories:
        #- $HOME/.minikube
        #- $HOME/.transmute
        #- $HOME/.kube
      #env:
        #- CHANGE_MINIKUBE_NONE_USER=true
        #- MINIKUBE_VERSION=v0.25.2
        #- USE_VOX=n

before_script:
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sh .ci/linux_before_install.sh; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sh .ci/mac_before_script.sh; fi
- bash -l -c "echo PATH=$HOME/.transmute/bin:$PATH >> $HOME/.bashrc"
- bash -l ./bootstrap

script:
- env
- PATH=$HOME/.transmute/bin:$PATH which kubectl
- PATH=$HOME/.transmute/bin:$PATH which minikube
- bash -l -c "which npm"
- bash -l -c "which node"
- bash -l -c "node -v"
- bash -l -c "npm -v"
- bash -l -c "which ngrok"
- bash -l -c "which helm"
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then bash -l .ci/linux_script; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sh .ci/mac_script.sh; fi

- helm install ./charts/ganache-cli --name=ganache
- sleep 180

- kubectl get services

- export MINIKUBE_IP=$(minikube ip)
- export KONG_ADMIN_URL=$(minikube service gateway-kong-admin --url | sed 's,http://,https://,g')
- export KONG_PROXY_URL=$(minikube service gateway-kong-proxy --url | sed 's,http://,https://,g')
- export KONG_PROXY_PORT=$(kubectl get service gateway-kong-proxy -o json | jq -r '.spec.ports[0].nodePort')

- bash -l -c "npm i"
- bash -l -c "PATH=$HOME/.transmute/bin:$PATH ./scripts/configure-hosts.sh"
- bash -l -c "./scripts/configure-kong-ganache.sh"
- bash -l -c "./scripts/configure-kong-ipfs.sh"
- bash -l -c "./scripts/configure-kong-okta-ipfs.sh"
- bash -l -c "./scripts/configure-framework-kong.sh "

- lerna bootstrap

- TRANSMUTE_ENV=minikube lerna run --scope transmute-eventstore truffle:migrate
- TRANSMUTE_ENV=minikube lerna run --scope ipfs-api build
- TRANSMUTE_ENV=minikube ACCESS_TOKEN=$(node ./scripts/okta/get-okta-token.js) lerna run --scope transmute-eventstore test
- TRANSMUTE_ENV=minikube lerna run --scope transmute-eventstore test:report
- TRANSMUTE_ENV=minikube lerna run --scope transmute-eventstore build
# - TRANSMUTE_ENV=minikube lerna run --scope transmute-eventstore test:smoke 

- TRANSMUTE_ENV=minikube lerna run --scope transmute-eventstore truffle:test

- lerna run --scope transmute-eventstore truffle:coverage
- lerna run --scope transmute-eventstore truffle:coverage:report
